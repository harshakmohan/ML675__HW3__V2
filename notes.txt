FOR 2-LAYER NEURAL NETWORK:

We are classifying images of size 28x28 = 784 pixels.
Thus each input is a numpy array with 784 elements.

Classify FashionMNIST dataset into one of 10 classes.

Use Sequential module to map each input image to hidden layers and eventually a vector of length 10, which contains class scores or logits.

We will use cross-entropy as loss function. This is the same as the loss we used in HW1.

We will rely on the softmax function through PyTorch's cross-entropy loss function, so we will never need to use softmax function directly.

FOR CNN:

